import { AsyncStorage } from 'react-native';
const addMovie = async () => {
  if (newMovie.title && newMovie.genre && newMovie.rating) {
    const movieToAdd = {
      title: newMovie.title,
      genre: newMovie.genre,
      rating: newMovie.rating,
    };

    try {
      // Lê os filmes existentes em AsyncStorage
      const existingMovies = await AsyncStorage.getItem('movies');

      // Converte os filmes em JSON para um array
      const parsedMovies = existingMovies ? JSON.parse(existingMovies) : [];

      // Adiciona o novo filme ao array de filmes
      parsedMovies.push(movieToAdd);

      // Salva o array atualizado de filmes em AsyncStorage
      await AsyncStorage.setItem('movies', JSON.stringify(parsedMovies));

      // Atualiza o estado com a nova lista de filmes
      setMovies(parsedMovies);

      // Limpa os campos de entrada
      setNewMovie({ title: '', genre: '', rating: '' });
    } catch (error) {
      console.error('Erro ao adicionar filme:', error);
    }
  }
};
import React, { useState } from 'react';
import { View, Text, FlatList, TextInput, Button, StyleSheet } from 'react-native';

const MovieList = () => {
  const [movies, setMovies] = useState([]);
  const [newMovie, setNewMovie] = useState({ title: '', genre: '', rating: '' });

  const addMovie = () => {
    if (newMovie.title && newMovie.genre && newMovie.rating) {
      setMovies([...movies, newMovie]);
      setNewMovie({ title: '', genre: '', rating: '' });
    }
  };

  const deleteMovie = (index) => {
    const updatedMovies = [...movies];
    updatedMovies.splice(index, 1);
    setMovies(updatedMovies);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Lista de Filmes</Text>
      <View style={styles.form}>
        <TextInput
          placeholder="Título do Filme"
          value={newMovie.title}
          onChangeText={(text) => setNewMovie({ ...newMovie, title: text })}
          style={styles.input}
          placeholderTextColor="#033" 
        />
        <TextInput
          placeholder="Gênero do Filme"
          value={newMovie.genre}
          onChangeText={(text) => setNewMovie({ ...newMovie, genre: text })}
          style={styles.input}
          placeholderTextColor="#033"
        />
        <TextInput
          placeholder="Nota/Avaliação do Filme"
          value={newMovie.rating}
          onChangeText={(text) => setNewMovie({ ...newMovie, rating: text })}
          style={styles.input}
          keyboardType="numeric"
          placeholderTextColor="#033"
        />
        <Button title="Adicionar Filme" onPress={addMovie} color="#007BFF" />
      </View>
      <FlatList
        data={movies}
        keyExtractor={(item, index) => index.toString()}
        renderItem={({ item, index }) => (
          <View style={styles.movieItem}>
            <Text style={styles.movieTitle}>{item.title}</Text>
            <Text style={styles.movieInfo}>Gênero: {item.genre}</Text>
            <Text style={styles.movieInfo}>Nota/Avaliação: {item.rating}</Text>
            <Button title="Excluir" onPress={() => deleteMovie(index)} color="#FF4500" />
          </View>
        )}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#', 
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: '#007BFF', 
  },
  form: {
    marginBottom: 20,
  },
  input: {
    marginBottom: 10,
    padding: 10,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 5,
    color: '#333', 
  },
  movieItem: {
    marginBottom: 10,
    padding: 10,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 5,
  },
  movieTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333', 
  },
  movieInfo: {
    color: '#333', 
  },
});

export default MovieList;
  },
});

export default MovieList;
